{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/GermlineStructuralV-nf/master/nextflow_schema.json",
  "title": "GermlineStructuralV-nf pipeline parameters",
  "description": "Multi-caller germline structural variant calling pipeline",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data",
      "required": ["input"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "schema": "assets/schema_input.json",
          "description": "Path to tab-separated file containing information about the samples in the experiment.",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outDir": {
          "type": "string",
          "default": "./results",
          "description": "Path to output directory location.",
          "format": "directory-path"
        }
      }
    },
    "reference_data": {
      "title": "Reference data",
      "type": "object",
      "fa_icon": "fas fa-dna",
      "description": "Reference genome files required for SV calling",
      "default": "",
      "properties": {
        "ref": {
          "type": "string",
          "description": "Path to reference genome in FASTA format. Pipeline assumes index files are housed in the same directory.",
          "format": "file-path",
          "default": "null"
        },
        "intervals": {
          "type": "string",
          "description": "Full path and name of the intervals file for Manta (bed format).",
          "format": "file-path",
          "default": "null"
        }
      },
      "required": ["ref"]
    },
    "annotation_options": {
      "title": "Annotation options",
      "type": "object",
      "fa_icon": "far fa-edit",
      "description": "Settings for annotating VCFs with AnnotSV",
      "default": "",
      "properties": {
        "annotsvMode": {
          "type": "string",
          "default": "both",
          "description": "Specify full, split, or both for AnnotSV output mode"
        },
        "annotsvDir": {
          "type": "string",
          "description": "Full path to the directory housing the prepared Annotations_human directory for AnnotSV",
          "default": "null"
        }
      }
    },
    "vcf_merging_options": {
      "title": "VCF merging options",
      "type": "object",
      "fa_icon": "fas fa-sign-in-alt",
      "description": "Settings for merging caller-VCFs per sample with SURVIVOR",
      "default": "",
      "properties": {
        "survivorConsensus": {
          "type": "integer",
          "default": 1,
          "description": "Number of supportive callers require to report event.",
          "enum": [0, 1]
        },
        "survivorType": {
          "type": "integer",
          "default": 1,
          "description": "Requirement for callers to agree on event type before merging calls (default: yes[1])",
          "enum": [0, 1]
        },
        "survivorMaxDist": {
          "type": "integer",
          "default": 1000,
          "description": "Maximum distance between SVs to merge"
        },
        "survivorSize": {
          "type": "integer",
          "default": 40,
          "description": "Minimum size (bp) event to report"
        },
        "survivorStrand": {
          "type": "integer",
          "default": 1,
          "description": "Requirement for callers to identify event on same strand before merging calls (default: yes[1])",
          "enum": [0, 1]
        }
      }
    },
    "extra_arguments": {
      "title": "Additional flags",
      "type": "object",
      "fa_icon": "far fa-flag",
      "description": "Additional flags to be applied to any of the callers or AnnotSV",
      "default": "",
      "properties": {
        "extraMantaFlags": {
          "type": "string",
          "description": "Additionally specify any valid Manta flags",
          "default": "null"
        },
        "extraSmooveFlags": {
          "type": "string",
          "description": "Additionally specify any valid Smoove flags",
          "default": "null"
        },
        "extraTidditSvFlags": {
          "type": "string",
          "description": "Additionally specify any valid Tiddit SV flags",
          "default": "null"
        },
        "extraTidditCovFlags": {
          "type": "string",
          "description": "Additionally specify any valid Tiddit Cov flags",
          "default": "null"
        },
        "extraAnnotsvFlags": {
          "type": "string",
          "description": "Additionally specify any valid AnnotSV flags",
          "default": "null"
        }
      }
    },
    "hpc_account_details": {
      "title": "HPC account details",
      "type": "object",
      "description": "Account settings for running workflow at NCI Gadi or Pawsey Setonix HPCs",
      "default": "",
      "properties": {
        "whoami": {
          "type": "string",
          "default": "false",
          "description": "User ID for HPC account"
        },
        "pbs_account": {
          "type": "string",
          "default": "false"
        },
        "slurm_account": {
          "type": "string",
          "default": "false"
        }
      },
      "fa_icon": "fas fa-laptop-code"
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/reference_data"
    },
    {
      "$ref": "#/definitions/annotation_options"
    },
    {
      "$ref": "#/definitions/vcf_merging_options"
    },
    {
      "$ref": "#/definitions/extra_arguments"
    },
    {
      "$ref": "#/definitions/hpc_account_details"
    }
  ],
  "properties": {
    "version": {
      "type": "integer",
      "default": 1
    },
    "help": {
      "type": "string",
      "default": "false"
    }
  }
}
